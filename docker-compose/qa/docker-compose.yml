version: "3.4.1"

services:
  #  rabbit:
  #    image: rabbitmq:3.13-management
  #    hostname: rabbitmq
  #    ports:
  #      - "5672:5672"
  #      - "15672:15672"
  #    healthcheck:
  #      test: rabbitmq-diagnostics check_port_connectivity
  #      interval: 10s
  #      timeout: 5s
  #      retries: 10
  #      start_period: 5s
  #    extends:
  #      file: common-config.yml
  #      service: network-deploy-service
  accountsdb:
    container_name: accountsdb
    ports:
      - 3306:3306 # 3306: expose outside world for access db
    environment:
      MYSQL_DATABASE: accountsdb
    extends:
      file: common-config.yml
      service: microservice-db-config

  loandb:
    container_name: loandb
    ports:
      - 3307:3306 # 3307: expose outside world for access db. If you don't need to access the db in the outside world the delete this port
    environment:
      MYSQL_DATABASE: loandb
    extends:
      file: common-config.yml
      service: microservice-db-config

  cardsdb:
    container_name: cardsdb
    ports:
      - 3308:3306 # 3308: expose outside world for access db
    environment:
      MYSQL_DATABASE: cardsdb
    extends:
      file: common-config.yml
      service: microservice-db-config

  redis:
    image: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      timeout: 10s
      retries: 10
    extends:
      file: common-config.yml
      service: network-deploy-service


  configserver:
    image: "akash9229/configserver:v1"
    container_name: configserver-ms
    ports:
      - "8071:8071"
    #    depends_on:
    #      rabbit:
    #        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-base-config

  eurekaserver:
    image: "akash9229/eurekaserver:v1"
    container_name: eurekaserver-ms
    ports:
      - "8070:8070"
    #    depends_on:
    #      rabbit:
    #        condition: service_healthy
    depends_on:
      configserver:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-configserver-config
    environment:
      SPRING_APPLICATION_NAME: "eurekaserver"

  accounts:
    image: "akash9229/accounts:v1"
    container_name: accounts-ms
    ports:
      - "8080:8080"
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "accounts"
      SPRING_DATASOURCE_URL: "jdbc:mysql://accountsdb:3306/accountsdb"
    depends_on:
      accountsdb:
        condition: service_healthy
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-eureka-config

  loan:
    image: "akash9229/loan:v1"
    container_name: loan-ms
    ports:
      - "8090:8090"
    healthcheck:
      test: "curl --fail --silent localhost:8090/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "loan"
      SPRING_DATASOURCE_URL: "jdbc:mysql://loandb:3306/loandb" # project and db are their own world. so no need to change the port to 3307
    depends_on:
      loandb:
        condition: service_healthy
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-eureka-config

  cards:
    image: "akash9229/cards:v1"
    container_name: cards-ms
    ports:
      - "9000:9000"
    healthcheck:
      test: "curl --fail --silent localhost:9000/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "cards"
      SPRING_DATASOURCE_URL: "jdbc:mysql://cardsdb:3306/cardsdb"
    depends_on:
      cardsdb:
        condition: service_healthy
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-eureka-config

  gatewayserver:
    image: "akash9229/gatewayserver:v1"
    container_name: gatewayserver-ms
    ports:
      - "8072:8072"
    environment:
      SPRING_APPLICATION_NAME: "gatewayserver"
      SPRING_DATA_REDIS_CONNECT-TIMEOUT: 2s
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_TIMEOUT: 1s
    depends_on:
      accounts:
        condition: service_healthy
      cards:
        condition: service_healthy
      loan:
        condition: service_healthy
      redis:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-eureka-config

networks:
  akashNetwork:
    driver: "bridge"
